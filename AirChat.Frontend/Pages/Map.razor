@page "/Map"
@using LeafletForBlazor



<h3>Map</h3>
<button @onclick="onClickRun">Run</button> //launch moving points
<RealTimeMap @ref="realTimeMap"
             width="600px"
             height="600px"
             Parameters="@parameters"></RealTimeMap>


@code {
    RealTimeMap? realTimeMap;   //reference to map control
    RealTimeMap.LoadParameters parameters = new RealTimeMap.LoadParameters()  //general map settings
        {
            zoom_level = 18,
            location = new RealTimeMap.Location()
            {
                latitude = 44.4501715,
                longitude = 26.1107672,
            }
        };

    //points (coordonate) on the route. For simulation...
    List<List<double>> coordinates = new List<List<double>>() {
    new List<double>() { 44.4502578, 26.1108199 },
    new List<double>() { 44.4500215, 26.1105407 },
    new List<double>() { 44.4497369, 26.1093086 },
    new List<double>() { 44.4496145 , 26.1088460 },
    new List<double>() {  44.4491875, 26.1079328 }
    };

    RealTimeMap.PointSymbol symbol = new RealTimeMap.PointSymbol()
        {
            color = "red",
            fillColor = "yellow",
            radius = 10,
            weight = 3,
            opacity = 1,
            fillOpacity = 1
        };
    bool run = false;
    private async Task onClickRun() //Button onclick event
    {
        run = !run;
        for (var i = 0; i < 1000; i++)
        {
            var pas = i % coordinates.Count;
            RealTimeMap.PointTooltip tooltip = new RealTimeMap.PointTooltip()
                {
                    content = $"{Math.Round(coordinates[pas][0], 3)},{Math.Round(coordinates[pas][1], 3)}",
                    opacity = 0.6
                };

            await realTimeMap.movePoint(coordinates[pas].ToArray(), symbol, tooltip);
            await Task.Delay(1000);
            if (run == false)
                return;
        }
    }

}